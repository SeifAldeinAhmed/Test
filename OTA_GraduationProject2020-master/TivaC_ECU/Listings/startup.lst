


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000 E000ED08 
                       NVIC_VTABLE
                               equ              0xE000ED08
    7 00000000 00001000 
                       _VTABLE_START_ADDRESS
                               equ              0x00001000
    8 00000000 00001000 
                       _APP_START_ADDRESS
                               equ              0x00001000
    9 00000000         
   10 00000000         
   11 00000000                 thumb
   12 00000000                 require8
   13 00000000                 preserve8
   14 00000000         
   15 00000000         
   16 00000000 00000040 
                       _STACK_SIZE
                               EQU              64
   17 00000000         
   18 00000000         ;*******************************************************
                       ***********************
   19 00000000         ;
   20 00000000         ; The stack gets placed into the zero-init section.
   21 00000000         ;
   22 00000000         ;*******************************************************
                       ***********************  
   23 00000000                 area             ||.bss||, noinit, align=2
   24 00000000         
   25 00000000         ;*******************************************************
                       ***********************
   26 00000000         ;
   27 00000000         ; Allocate storage for the stack.
   28 00000000         ;
   29 00000000         ;*******************************************************
                       ***********************
   30 00000000         g_pulStack                           ; pointer to start 
                                                            address of the next
                                                             space 
   31 00000000         Stack_Mem
                               space            _STACK_SIZE*4
   32 00000100         
   33 00000100         
   34 00000100         ;*******************************************************
                       ***********************
   35 00000100         ;
   36 00000100         ; This portion of the file goes into the reset section.
   37 00000100         ;
   38 00000100         ;*******************************************************
                       ***********************
   39 00000100                 area             RESET, code, readonly, align=3
   40 00000000         
   41 00000000         ; Vector Table Mapped to Address 0 at Reset
   42 00000000         



ARM Macro Assembler    Page 2 


   43 00000000                 AREA             RESET, DATA, READONLY
   44 00000000                 EXPORT           __Vectors
   45 00000000                 EXPORT           __Vectors_End
   46 00000000                 EXPORT           __Vectors_Size
   47 00000000         
   48 00000000         
   49 00000000 00000100 
                       __Vectors
                               DCD              g_pulStack + (_STACK_SIZE *4 ) 
                                                            ; Top of Stack
   50 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   51 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   52 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   53 00000010 00000000        DCD              IntDefaultHandler ; Offset 10: 
                                                            MPU fault handler
   54 00000014 00000000        DCD              IntDefaultHandler ; Offset 14: 
                                                            Bus fault handler
   55 00000018 00000000        DCD              IntDefaultHandler ; Offset 18: 
                                                            Usage fault handler
                                                            
   56 0000001C 00000000        DCD              0           ; Offset 1C: Reserv
                                                            ed
   57 00000020 00000000        DCD              0           ; Offset 20: Reserv
                                                            ed
   58 00000024 00000000        DCD              0           ; Offset 24: Reserv
                                                            ed
   59 00000028 00000000        DCD              0           ; Offset 28: Reserv
                                                            ed
   60 0000002C 00000000        DCD              IntDefaultHandler ;UpdateHandle
                                                            r                  
                                                             ; Offset 2C: SVCal
                                                            l handler
   61 00000030 00000000        DCD              IntDefaultHandler ; Offset 30: 
                                                            Debug monitor handl
                                                            er
   62 00000034 00000000        DCD              0           ; Offset 34: Reserv
                                                            ed
   63 00000038 00000000        DCD              IntDefaultHandler ; Offset 38: 
                                                            PendSV handler
   64 0000003C                 if               :def:_ENET_ENABLE_UPDATE
   68 0000003C 00000000        DCD              IntDefaultHandler ; Offset 3C: 
                                                            SysTick handler
   69 00000040                 endif
   70 00000040                 if               :def:_UART_ENABLE_UPDATE :land:
 :def:_UART_AUTOBAUD
   74 00000040 00000000        DCD              IntDefaultHandler ; Offset 40: 
                                                            GPIO port A handler
                                                            
   75 00000044                 endif
   76 00000044 00000000        DCD              IntDefaultHandler 
                                                            ;   1: GPIO Port B
   77 00000048 00000000        DCD              IntDefaultHandler 
                                                            ;   2: GPIO Port C
   78 0000004C 00000000        DCD              IntDefaultHandler 
                                                            ;   3: GPIO Port D
   79 00000050 00000000        DCD              IntDefaultHandler 
                                                            ;   4: GPIO Port E
   80 00000054 00000000        DCD              UART0_Handler ;   5: UART0 Rx a



ARM Macro Assembler    Page 3 


                                                            nd Tx
   81 00000058 00000000        DCD              IntDefaultHandler ;   6: UART1 
                                                            Rx and Tx
   82 0000005C 00000000        DCD              IntDefaultHandler ;   7: SSI0 R
                                                            x and Tx
   83 00000060 00000000        DCD              IntDefaultHandler ;   8: I2C0 M
                                                            aster and Slave
   84 00000064 00000000        DCD              IntDefaultHandler 
                                                            ;   9: PWM Fault
   85 00000068 00000000        DCD              IntDefaultHandler ;  10: PWM Ge
                                                            nerator 0
   86 0000006C 00000000        DCD              IntDefaultHandler ;  11: PWM Ge
                                                            nerator 1
   87 00000070 00000000        DCD              IntDefaultHandler ;  12: PWM Ge
                                                            nerator 2
   88 00000074 00000000        DCD              IntDefaultHandler ;  13: Quadra
                                                            ture Encoder 0
   89 00000078 00000000        DCD              IntDefaultHandler ;  14: ADC Se
                                                            quence 0
   90 0000007C 00000000        DCD              IntDefaultHandler ;  15: ADC Se
                                                            quence 1
   91 00000080 00000000        DCD              IntDefaultHandler ;  16: ADC Se
                                                            quence 2
   92 00000084 00000000        DCD              IntDefaultHandler ;  17: ADC Se
                                                            quence 3
   93 00000088 00000000        DCD              IntDefaultHandler ;  18: Watchd
                                                            og timer
   94 0000008C 00000000        DCD              IntDefaultHandler ;  19: Timer 
                                                            0 subtimer A
   95 00000090 00000000        DCD              IntDefaultHandler ;  20: Timer 
                                                            0 subtimer B
   96 00000094 00000000        DCD              IntDefaultHandler ;  21: Timer 
                                                            1 subtimer A
   97 00000098 00000000        DCD              IntDefaultHandler ;  22: Timer 
                                                            1 subtimer B
   98 0000009C 00000000        DCD              IntDefaultHandler ;  23: Timer 
                                                            2 subtimer A
   99 000000A0 00000000        DCD              IntDefaultHandler ;  24: Timer 
                                                            2 subtimer B
  100 000000A4 00000000        DCD              IntDefaultHandler ;  25: Analog
                                                             Comparator 0
  101 000000A8 00000000        DCD              IntDefaultHandler ;  26: Analog
                                                             Comparator 1
  102 000000AC 00000000        DCD              IntDefaultHandler ;  27: Analog
                                                             Comparator 2
  103 000000B0 00000000        DCD              IntDefaultHandler ;  28: System
                                                             Control (PLL, OSC,
                                                             BO)
  104 000000B4 00000000        DCD              IntDefaultHandler ;  29: FLASH 
                                                            Control
  105 000000B8 00000000        DCD              IntDefaultHandler 
                                                            ;  30: GPIO Port F
  106 000000BC 00000000        DCD              IntDefaultHandler 
                                                            ;  31: GPIO Port G
  107 000000C0 00000000        DCD              IntDefaultHandler 
                                                            ;  32: GPIO Port H
  108 000000C4 00000000        DCD              IntDefaultHandler ;  33: UART2 
                                                            Rx and Tx
  109 000000C8 00000000        DCD              IntDefaultHandler ;  34: SSI1 R



ARM Macro Assembler    Page 4 


                                                            x and Tx
  110 000000CC 00000000        DCD              IntDefaultHandler ;  35: Timer 
                                                            3 subtimer A
  111 000000D0 00000000        DCD              IntDefaultHandler ;  36: Timer 
                                                            3 subtimer B
  112 000000D4 00000000        DCD              IntDefaultHandler ;  37: I2C1 M
                                                            aster and Slave
  113 000000D8 00000000        DCD              IntDefaultHandler ;  38: Quadra
                                                            ture Encoder 1
  114 000000DC 00000000        DCD              IntDefaultHandler ;  39: CAN0
  115 000000E0 00000000        DCD              IntDefaultHandler ;  40: CAN1
  116 000000E4 00000000        DCD              IntDefaultHandler ;  41: CAN2
  117 000000E8 00000000        DCD              0           ;  42: Reserved
  118 000000EC 00000000        DCD              IntDefaultHandler 
                                                            ;  43: Hibernate
  119 000000F0 00000000        DCD              IntDefaultHandler ;  44: USB0
  120 000000F4 00000000        DCD              IntDefaultHandler ;  45: PWM Ge
                                                            nerator 3
  121 000000F8 00000000        DCD              IntDefaultHandler ;  46: uDMA S
                                                            oftware Transfer
  122 000000FC 00000000        DCD              IntDefaultHandler 
                                                            ;  47: uDMA Error
  123 00000100 00000000        DCD              IntDefaultHandler ;  48: ADC1 S
                                                            equence 0
  124 00000104 00000000        DCD              IntDefaultHandler ;  49: ADC1 S
                                                            equence 1
  125 00000108 00000000        DCD              IntDefaultHandler ;  50: ADC1 S
                                                            equence 2
  126 0000010C 00000000        DCD              IntDefaultHandler ;  51: ADC1 S
                                                            equence 3
  127 00000110 00000000        DCD              0           ;  52: Reserved
  128 00000114 00000000        DCD              0           ;  53: Reserved
  129 00000118 00000000        DCD              IntDefaultHandler 
                                                            ;  54: GPIO Port J
  130 0000011C 00000000        DCD              IntDefaultHandler 
                                                            ;  55: GPIO Port K
  131 00000120 00000000        DCD              IntDefaultHandler 
                                                            ;  56: GPIO Port L
  132 00000124 00000000        DCD              IntDefaultHandler ;  57: SSI2 R
                                                            x and Tx
  133 00000128 00000000        DCD              IntDefaultHandler ;  58: SSI3 R
                                                            x and Tx
  134 0000012C 00000000        DCD              IntDefaultHandler ;  59: UART3 
                                                            Rx and Tx
  135 00000130 00000000        DCD              IntDefaultHandler ;  60: UART4 
                                                            Rx and Tx
  136 00000134 00000000        DCD              IntDefaultHandler ;  61: UART5 
                                                            Rx and Tx
  137 00000138 00000000        DCD              IntDefaultHandler ;  62: UART6 
                                                            Rx and Tx
  138 0000013C 00000000        DCD              IntDefaultHandler ;  63: UART7 
                                                            Rx and Tx
  139 00000140 00000000        DCD              0           ;  64: Reserved
  140 00000144 00000000        DCD              0           ;  65: Reserved
  141 00000148 00000000        DCD              0           ;  66: Reserved
  142 0000014C 00000000        DCD              0           ;  67: Reserved
  143 00000150 00000000        DCD              IntDefaultHandler ;  68: I2C2 M
                                                            aster and Slave
  144 00000154 00000000        DCD              IntDefaultHandler ;  69: I2C3 M



ARM Macro Assembler    Page 5 


                                                            aster and Slave
  145 00000158 00000000        DCD              IntDefaultHandler ;  70: Timer 
                                                            4 subtimer A
  146 0000015C 00000000        DCD              IntDefaultHandler ;  71: Timer 
                                                            4 subtimer B
  147 00000160 00000000        DCD              0           ;  72: Reserved
  148 00000164 00000000        DCD              0           ;  73: Reserved
  149 00000168 00000000        DCD              0           ;  74: Reserved
  150 0000016C 00000000        DCD              0           ;  75: Reserved
  151 00000170 00000000        DCD              0           ;  76: Reserved
  152 00000174 00000000        DCD              0           ;  77: Reserved
  153 00000178 00000000        DCD              0           ;  78: Reserved
  154 0000017C 00000000        DCD              0           ;  79: Reserved
  155 00000180 00000000        DCD              0           ;  80: Reserved
  156 00000184 00000000        DCD              0           ;  81: Reserved
  157 00000188 00000000        DCD              0           ;  82: Reserved
  158 0000018C 00000000        DCD              0           ;  83: Reserved
  159 00000190 00000000        DCD              0           ;  84: Reserved
  160 00000194 00000000        DCD              0           ;  85: Reserved
  161 00000198 00000000        DCD              0           ;  86: Reserved
  162 0000019C 00000000        DCD              0           ;  87: Reserved
  163 000001A0 00000000        DCD              0           ;  88: Reserved
  164 000001A4 00000000        DCD              0           ;  89: Reserved
  165 000001A8 00000000        DCD              0           ;  90: Reserved
  166 000001AC 00000000        DCD              0           ;  91: Reserved
  167 000001B0 00000000        DCD              IntDefaultHandler ;  92: Timer 
                                                            5 subtimer A
  168 000001B4 00000000        DCD              IntDefaultHandler ;  93: Timer 
                                                            5 subtimer B
  169 000001B8 00000000        DCD              IntDefaultHandler ;  94: Wide T
                                                            imer 0 subtimer A
  170 000001BC 00000000        DCD              IntDefaultHandler ;  95: Wide T
                                                            imer 0 subtimer B
  171 000001C0 00000000        DCD              IntDefaultHandler ;  96: Wide T
                                                            imer 1 subtimer A
  172 000001C4 00000000        DCD              IntDefaultHandler ;  97: Wide T
                                                            imer 1 subtimer B
  173 000001C8 00000000        DCD              IntDefaultHandler ;  98: Wide T
                                                            imer 2 subtimer A
  174 000001CC 00000000        DCD              IntDefaultHandler ;  99: Wide T
                                                            imer 2 subtimer B
  175 000001D0 00000000        DCD              IntDefaultHandler ; 100: Wide T
                                                            imer 3 subtimer A
  176 000001D4 00000000        DCD              IntDefaultHandler ; 101: Wide T
                                                            imer 3 subtimer B
  177 000001D8 00000000        DCD              IntDefaultHandler ; 102: Wide T
                                                            imer 4 subtimer A
  178 000001DC 00000000        DCD              IntDefaultHandler ; 103: Wide T
                                                            imer 4 subtimer B
  179 000001E0 00000000        DCD              IntDefaultHandler ; 104: Wide T
                                                            imer 5 subtimer A
  180 000001E4 00000000        DCD              IntDefaultHandler ; 105: Wide T
                                                            imer 5 subtimer B
  181 000001E8 00000000        DCD              IntDefaultHandler ; 106: FPU
  182 000001EC 00000000        DCD              0           ; 107: Reserved
  183 000001F0 00000000        DCD              0           ; 108: Reserved
  184 000001F4 00000000        DCD              IntDefaultHandler ; 109: I2C4 M
                                                            aster and Slave
  185 000001F8 00000000        DCD              IntDefaultHandler ; 110: I2C5 M



ARM Macro Assembler    Page 6 


                                                            aster and Slave
  186 000001FC 00000000        DCD              IntDefaultHandler 
                                                            ; 111: GPIO Port M
  187 00000200 00000000        DCD              IntDefaultHandler 
                                                            ; 112: GPIO Port N
  188 00000204 00000000        DCD              IntDefaultHandler ; 113: Quadra
                                                            ture Encoder 2
  189 00000208 00000000        DCD              0           ; 114: Reserved
  190 0000020C 00000000        DCD              0           ; 115: Reserved
  191 00000210 00000000        DCD              IntDefaultHandler ; 116: GPIO P
                                                            ort P (Summary or P
                                                            0)
  192 00000214 00000000        DCD              IntDefaultHandler 
                                                            ; 117: GPIO Port P1
                                                            
  193 00000218 00000000        DCD              IntDefaultHandler 
                                                            ; 118: GPIO Port P2
                                                            
  194 0000021C 00000000        DCD              IntDefaultHandler 
                                                            ; 119: GPIO Port P3
                                                            
  195 00000220 00000000        DCD              IntDefaultHandler 
                                                            ; 120: GPIO Port P4
                                                            
  196 00000224 00000000        DCD              IntDefaultHandler 
                                                            ; 121: GPIO Port P5
                                                            
  197 00000228 00000000        DCD              IntDefaultHandler 
                                                            ; 122: GPIO Port P6
                                                            
  198 0000022C 00000000        DCD              IntDefaultHandler 
                                                            ; 123: GPIO Port P7
                                                            
  199 00000230 00000000        DCD              IntDefaultHandler ; 124: GPIO P
                                                            ort Q (Summary or Q
                                                            0)
  200 00000234 00000000        DCD              IntDefaultHandler 
                                                            ; 125: GPIO Port Q1
                                                            
  201 00000238 00000000        DCD              IntDefaultHandler 
                                                            ; 126: GPIO Port Q2
                                                            
  202 0000023C 00000000        DCD              IntDefaultHandler 
                                                            ; 127: GPIO Port Q3
                                                            
  203 00000240 00000000        DCD              IntDefaultHandler 
                                                            ; 128: GPIO Port Q4
                                                            
  204 00000244 00000000        DCD              IntDefaultHandler 
                                                            ; 129: GPIO Port Q5
                                                            
  205 00000248 00000000        DCD              IntDefaultHandler 
                                                            ; 130: GPIO Port Q6
                                                            
  206 0000024C 00000000        DCD              IntDefaultHandler 
                                                            ; 131: GPIO Port Q7
                                                            
  207 00000250 00000000        DCD              IntDefaultHandler 
                                                            ; 132: GPIO Port R



ARM Macro Assembler    Page 7 


  208 00000254 00000000        DCD              IntDefaultHandler 
                                                            ; 133: GPIO Port S
  209 00000258 00000000        DCD              IntDefaultHandler ; 134: PWM 1 
                                                            Generator 0
  210 0000025C 00000000        DCD              IntDefaultHandler ; 135: PWM 1 
                                                            Generator 1
  211 00000260 00000000        DCD              IntDefaultHandler ; 136: PWM 1 
                                                            Generator 2
  212 00000264 00000000        DCD              IntDefaultHandler ; 137: PWM 1 
                                                            Generator 3
  213 00000268 00000000        DCD              IntDefaultHandler 
                                                            ; 138: PWM 1 Fault
  214 0000026C         
  215 0000026C         __Vectors_End
  216 0000026C         
  217 0000026C 0000026C 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  218 0000026C         
  219 0000026C         
  220 0000026C         ;*******************************************************
                       ***********************
  221 0000026C         ;
  222 0000026C         ; Initialize the processor by copying the boot loader fr
                       om flash to SRAM, zero
  223 0000026C         ; filling the .bss section, and moving the vector table 
                       to the beginning of
  224 0000026C         ; SRAM.  The return address is modified to point to the 
                       SRAM copy of the boot
  225 0000026C         ; loader instead of the flash copy, resulting in a branc
                       h to the copy now in
  226 0000026C         ; SRAM.
  227 0000026C         ;
  228 0000026C         ;*******************************************************
                       ***********************
  229 0000026C                 export           ProcessorInit
  230 0000026C         ProcessorInit
  231 0000026C         ;
  232 0000026C         ; Copy the code image from flash to SRAM.
  233 0000026C         ;
  234 0000026C 2000            movs             r0, #0x0000
  235 0000026E 2100            movs             r1, #0x0000 ; raise Z F V flags
                                                             if result has them
                                                            
  236 00000270 F2C2 0100       movt             r1, #0x2000 ;move upper 16-bits
                                                            
  237 00000274                 import           ||Image$$SRAM$$ZI$$Base||
  238 00000274 4A0E            ldr              r2, =||Image$$SRAM$$ZI$$Base||
  239 00000276         copy_loop
  240 00000276 F850 3B04       ldr              r3, [r0], #4
  241 0000027A F841 3B04       str              r3, [r1], #4
  242 0000027E 4291            cmp              r1, r2
  243 00000280 DBF9            blt              copy_loop
  244 00000282         
  245 00000282         ;
  246 00000282         ; Zero fill the .bss section.
  247 00000282         ;
  248 00000282                 import           ||Image$$SRAM$$ZI$$Base||
  249 00000282 490B            ldr              r1, =||Image$$SRAM$$ZI$$Base||



ARM Macro Assembler    Page 8 


  250 00000284 2000            movs             r0, #0x0000
  251 00000286                 import           ||Image$$SRAM$$ZI$$Limit||
  252 00000286 4A0B            ldr              r2, =||Image$$SRAM$$ZI$$Limit||
  253 00000288         zero_loop
  254 00000288 F841 0B04       str              r0, [r1], #4
  255 0000028C 4291            cmp              r1, r2
  256 0000028E DBFB            blt              zero_loop
  257 00000290         
  258 00000290         ;
  259 00000290         ; Set the vector table pointer to the beginning of SRAM.
                       
  260 00000290         ;
  261 00000290 F64E 5008       movw             r0, #(NVIC_VTABLE & 0xffff)
  262 00000294 F2CE 0000       movt             r0, #(NVIC_VTABLE >> 16)
  263 00000298 2100            movs             r1, #0x0000
  264 0000029A F2C2 0100       movt             r1, #0x2000
  265 0000029E 6001            str              r1, [r0]
  266 000002A0         
  267 000002A0         ;
  268 000002A0         ; Return to the caller.
  269 000002A0         ;
  270 000002A0 4770            bx               lr
  271 000002A2         
  272 000002A2                 export           Reset_Handler
  273 000002A2         Reset_Handler
  274 000002A2         
  275 000002A2         ;
  276 000002A2         ; Enable the floating-point unit.  This must be done her
                       e in case any
  277 000002A2         ; later C functions use floating point.  Note that some 
                       toolchains will
  278 000002A2         ; use the FPU registers for general workspace even if no
                        explicit floating
  279 000002A2         ; point data types are in use.
  280 000002A2         ;
  281 000002A2         ;  movw    r0, #0xED88
  282 000002A2         ;  movt    r0, #0xE000
  283 000002A2         ;  ldr     r1, [r0]
  284 000002A2         ;  orr     r1, #0x00F00000
  285 000002A2         ;  str     r1, [r0]
  286 000002A2         
  287 000002A2         ;
  288 000002A2         ; Initialize the processor.
  289 000002A2         ;
  290 000002A2 F7FF FFFE       bl               ProcessorInit
  291 000002A6         
  292 000002A6         ;
  293 000002A6         ; Branch to the SRAM copy of the reset handler.
  294 000002A6         ;
  295 000002A6 F8DF F010       ldr              pc, =Reset_Handler_In_SRAM
  296 000002AA         
  297 000002AA         ;*******************************************************
                       ***********************
  298 000002AA         ;
  299 000002AA         ; The NMI handler.
  300 000002AA         ;
  301 000002AA         ;*******************************************************
                       ***********************
  302 000002AA         NMI_Handler



ARM Macro Assembler    Page 9 


  303 000002AA                 if               :def:_ENABLE_MOSCFAIL_HANDLER
  321 000002AA         ;
  322 000002AA         ; Loop forever since there is nothing that we can do abo
                       ut a NMI.
  323 000002AA         ;
  324 000002AA E7FE            B                .
  325 000002AC                 endif
  326 000002AC         
  327 000002AC         ;*******************************************************
                       ***********************
  328 000002AC         ;
  329 000002AC         ; The hard fault handler.
  330 000002AC         ;
  331 000002AC         ;*******************************************************
                       *********************** 
  332 000002AC         HardFault_Handler
  333 000002AC         
  334 000002AC E7FE            B                .           ;loop forever
  335 000002AE         
  337 000002AE         UART0_Handler
                               PROC
  338 000002AE                 EXPORT           UART0_Handler [WEAK]
  339 000002AE E7FE            B                .
  340 000002B0                 ENDP
  341 000002B0         
  342 000002B0         ;*******************************************************
                       ***********************
  343 000002B0         ;
  344 000002B0         ; This portion of the file goes into the text section.
  345 000002B0         ;
  346 000002B0         ;*******************************************************
                       ***********************
  347 000002B0                 align            4
  348 000002B0 00000000 
              00000000 
              00000000         area             ||.text||, code, readonly, alig
n=2
  349 00000000         
  350 00000000         Reset_Handler_In_SRAM
  351 00000000         ;
  352 00000000         ; Call the user-supplied low level hardware initializati
                       on function
  353 00000000         ; if provided.
  354 00000000         ;
  355 00000000                 if               :def:_BL_HW_INIT_FN_HOOK
  358                          endif
  359 00000000         
  360 00000000         ;
  361 00000000         ; See if an update should be performed.
  362 00000000         ;
  363 00000000         ;  import  CheckForceUpdate
  364 00000000         ;   bl      CheckForceUpdate
  365 00000000         ;   cbz     r0, CallApplication
  366 00000000         
  367 00000000         ;
  368 00000000         ; Configure the microcontroller.
  369 00000000         ;
  370 00000000         EnterBootLoader
  371 00000000                 if               :def:_ENET_ENABLE_UPDATE



ARM Macro Assembler    Page 10 


  381 00000000         ;  import  ConfigureDevice     ;init clock and UART
  382 00000000         ;  bl      ConfigureDevice
  383 00000000                 import           main
  384 00000000 F7FF FFFE       bl               main
  385 00000004                 endif
  386 00000004         
  387 00000004         ;
  388 00000004         ; Call the user-supplied initialization function if prov
                       ided.
  389 00000004         ;
  390 00000004                 if               :def:_BL_INIT_FN_HOOK
  393                          endif
  394 00000004         
  395 00000004         ;
  396 00000004         ; Branch to the update handler.
  397 00000004         ;
  398 00000004         ;  if      :def:_ENET_ENABLE_UPDATE
  399 00000004         ;  import  UpdateBOOTP
  400 00000004         ; b       UpdateBOOTP
  401 00000004         ;elif    :def:_CAN_ENABLE_UPDATE
  402 00000004         ; import  UpdaterCAN
  403 00000004         ; b       UpdaterCAN
  404 00000004         ; elif    :def:_USB_ENABLE_UPDATE
  405 00000004         ; import  UpdaterUSB
  406 00000004         ; b       UpdaterUSB
  407 00000004         ; else
  408 00000004         ; import  Updater
  409 00000004         ; b       Updater
  410 00000004         ; endif
  411 00000004         
  412 00000004         ;
  413 00000004         ; This is a second symbol to allow starting the applicat
                       ion from the boot
  414 00000004         ; loader the linker may not like the perceived jump.
  415 00000004         ;
  416 00000004                 export           StartApplication
  417 00000004         StartApplication
  418 00000004         ;
  419 00000004         ; Call the application via the reset handler in its vect
                       or table.  Load the
  420 00000004         ; address of the application vector table.
  421 00000004         ;
  422 00000004         CallApplication
  423 00000004         ;
  424 00000004         ; Copy the application's vector table to the target addr
                       ess if necessary.
  425 00000004         ; Note that incorrect boot loader configuration could ca
                       use this to
  426 00000004         ; corrupt the code!  Setting VTABLE_START_ADDRESS to 0x2
                       0000000 (the start
  427 00000004         ; of SRAM) is safe since this will use the same memory t
                       hat the boot loader
  428 00000004         ; already uses for its vector table.  Great care will ha
                       ve to be taken if
  429 00000004         ; other addresses are to be used.
  430 00000004         ;
  431 00000004                 if               (_APP_START_ADDRESS != _VTABLE_
START_ADDRESS)
  454                          endif



ARM Macro Assembler    Page 11 


  455 00000004         
  456 00000004         ;
  457 00000004         ; Set the vector table address to the beginning of the a
                       pplication.
  458 00000004         ;
  459 00000004 F241 0000       movw             r0, #(_VTABLE_START_ADDRESS & 0
xffff)
  460 00000008                 if               (_VTABLE_START_ADDRESS > 0xffff
)
  462                          endif
  463 00000008 F64E 5108       movw             r1, #(NVIC_VTABLE & 0xffff)
  464 0000000C F2CE 0100       movt             r1, #(NVIC_VTABLE >> 16)
  465 00000010 6008            str              r0, [r1]
  466 00000012         
  467 00000012         ;
  468 00000012         ; Load the stack pointer from the application's vector t
                       able.
  469 00000012         ;
  470 00000012                 if               (_APP_START_ADDRESS != _VTABLE_
START_ADDRESS)
  475                          endif
  476 00000012 F8D0 D000       ldr              sp, [r0]
  477 00000016         
  478 00000016         ;
  479 00000016         ; Load the initial PC from the application's vector tabl
                       e and branch to
  480 00000016         ; the application's entry point.
  481 00000016         ;
  482 00000016 6840            ldr              r0, [r0, #4]
  483 00000018 4700            bx               r0
  484 0000001A         
  485 0000001A         ;*******************************************************
                       ***********************
  486 0000001A         ;
  487 0000001A         ; The default interrupt handler.
  488 0000001A         ;
  489 0000001A         ;*******************************************************
                       ***********************
  490 0000001A         IntDefaultHandler
  491 0000001A         ;
  492 0000001A         ; Loop forever since there is nothing that we can do abo
                       ut an unexpected
  493 0000001A         ; interrupt.
  494 0000001A         ;
  495 0000001A E7FE            b                .
  496 0000001C         
  497 0000001C         ;*******************************************************
                       ***********************
  498 0000001C         ;
  499 0000001C         ; Provides a small delay.  The loop below takes 3 cycles
                       /loop.
  500 0000001C         ;
  501 0000001C         ;*******************************************************
                       ***********************
  502 0000001C                 export           Delay
  503 0000001C         Delay
  504 0000001C 3801            subs             r0, #1
  505 0000001E D1FE            bne              Delay
  506 00000020 4770            bx               lr



ARM Macro Assembler    Page 12 


  507 00000022 00 00           ALIGN                        ;******************
                                                            ********
  508 00000024                 EXPORT           DisableInterrupts
  509 00000024                 EXPORT           EnableInterrupts
  510 00000024         ;*********** DisableInterrupts ***************
  511 00000024         ; disable interrupts
  512 00000024         ; inputs:  none
  513 00000024         ; outputs: none
  514 00000024         DisableInterrupts
  515 00000024 B672            CPSID            I
  516 00000026 4770            BX               LR
  517 00000028         
  518 00000028         ;*********** EnableInterrupts ***************
  519 00000028         ; disable interrupts
  520 00000028         ; inputs:  none
  521 00000028         ; outputs: none
  522 00000028         EnableInterrupts
  523 00000028 B662            CPSIE            I
  524 0000002A 4770            BX               LR
  525 0000002C         ;*******************************************************
                       ***********************
  526 0000002C         ;
  527 0000002C         ; This is the end of the file.
  528 0000002C         ;
  529 0000002C         ;*******************************************************
                       ***********************
  530 0000002C                 align            4
  531 0000002C         
  532 0000002C         
  533 0000002C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\startup.d -o.\objects\startup.o -I.\RTE\_Target_1 -IC
:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\
CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 5
23" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\startup.lst Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 31 in file Startup.s
   Uses
      None
Comment: Stack_Mem unused
g_pulStack 00000000

Symbol: g_pulStack
   Definitions
      At line 30 in file Startup.s
   Uses
      At line 49 in file Startup.s
Comment: g_pulStack used once
|.bss| 00000000

Symbol: |.bss|
   Definitions
      At line 23 in file Startup.s
   Uses
      None
Comment: |.bss| unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HardFault_Handler 000002AC

Symbol: HardFault_Handler
   Definitions
      At line 332 in file Startup.s
   Uses
      At line 52 in file Startup.s
Comment: HardFault_Handler used once
NMI_Handler 000002AA

Symbol: NMI_Handler
   Definitions
      At line 302 in file Startup.s
   Uses
      At line 51 in file Startup.s
Comment: NMI_Handler used once
ProcessorInit 0000026C

Symbol: ProcessorInit
   Definitions
      At line 230 in file Startup.s
   Uses
      At line 229 in file Startup.s
      At line 290 in file Startup.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 39 in file Startup.s
   Uses
      None
Comment: RESET unused
Reset_Handler 000002A2

Symbol: Reset_Handler
   Definitions
      At line 273 in file Startup.s
   Uses
      At line 50 in file Startup.s
      At line 272 in file Startup.s

UART0_Handler 000002AE

Symbol: UART0_Handler
   Definitions
      At line 337 in file Startup.s
   Uses
      At line 80 in file Startup.s
      At line 338 in file Startup.s

__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 49 in file Startup.s
   Uses
      At line 44 in file Startup.s
      At line 217 in file Startup.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


__Vectors_End 0000026C

Symbol: __Vectors_End
   Definitions
      At line 215 in file Startup.s
   Uses
      At line 45 in file Startup.s
      At line 217 in file Startup.s

copy_loop 00000276

Symbol: copy_loop
   Definitions
      At line 239 in file Startup.s
   Uses
      At line 243 in file Startup.s
Comment: copy_loop used once
zero_loop 00000288

Symbol: zero_loop
   Definitions
      At line 253 in file Startup.s
   Uses
      At line 256 in file Startup.s
Comment: zero_loop used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CallApplication 00000004

Symbol: CallApplication
   Definitions
      At line 422 in file Startup.s
   Uses
      None
Comment: CallApplication unused
Delay 0000001C

Symbol: Delay
   Definitions
      At line 503 in file Startup.s
   Uses
      At line 502 in file Startup.s
      At line 505 in file Startup.s

DisableInterrupts 00000024

Symbol: DisableInterrupts
   Definitions
      At line 514 in file Startup.s
   Uses
      At line 508 in file Startup.s
Comment: DisableInterrupts used once
EnableInterrupts 00000028

Symbol: EnableInterrupts
   Definitions
      At line 522 in file Startup.s
   Uses
      At line 509 in file Startup.s
Comment: EnableInterrupts used once
EnterBootLoader 00000000

Symbol: EnterBootLoader
   Definitions
      At line 370 in file Startup.s
   Uses
      None
Comment: EnterBootLoader unused
IntDefaultHandler 0000001A

Symbol: IntDefaultHandler
   Definitions
      At line 490 in file Startup.s
   Uses
      At line 53 in file Startup.s
      At line 54 in file Startup.s
      At line 55 in file Startup.s
      At line 60 in file Startup.s
      At line 61 in file Startup.s
      At line 63 in file Startup.s
      At line 68 in file Startup.s
      At line 74 in file Startup.s
      At line 76 in file Startup.s
      At line 77 in file Startup.s
      At line 78 in file Startup.s
      At line 79 in file Startup.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 81 in file Startup.s
      At line 82 in file Startup.s
      At line 83 in file Startup.s
      At line 84 in file Startup.s
      At line 85 in file Startup.s
      At line 86 in file Startup.s
      At line 87 in file Startup.s
      At line 88 in file Startup.s
      At line 89 in file Startup.s
      At line 90 in file Startup.s
      At line 91 in file Startup.s
      At line 92 in file Startup.s
      At line 93 in file Startup.s
      At line 94 in file Startup.s
      At line 95 in file Startup.s
      At line 96 in file Startup.s
      At line 97 in file Startup.s
      At line 98 in file Startup.s
      At line 99 in file Startup.s
      At line 100 in file Startup.s
      At line 101 in file Startup.s
      At line 102 in file Startup.s
      At line 103 in file Startup.s
      At line 104 in file Startup.s
      At line 105 in file Startup.s
      At line 106 in file Startup.s
      At line 107 in file Startup.s
      At line 108 in file Startup.s
      At line 109 in file Startup.s
      At line 110 in file Startup.s
      At line 111 in file Startup.s
      At line 112 in file Startup.s
      At line 113 in file Startup.s
      At line 114 in file Startup.s
      At line 115 in file Startup.s
      At line 116 in file Startup.s
      At line 118 in file Startup.s
      At line 119 in file Startup.s
      At line 120 in file Startup.s
      At line 121 in file Startup.s
      At line 122 in file Startup.s
      At line 123 in file Startup.s
      At line 124 in file Startup.s
      At line 125 in file Startup.s
      At line 126 in file Startup.s
      At line 129 in file Startup.s
      At line 130 in file Startup.s
      At line 131 in file Startup.s
      At line 132 in file Startup.s
      At line 133 in file Startup.s
      At line 134 in file Startup.s
      At line 135 in file Startup.s
      At line 136 in file Startup.s
      At line 137 in file Startup.s
      At line 138 in file Startup.s
      At line 143 in file Startup.s
      At line 144 in file Startup.s
      At line 145 in file Startup.s
      At line 146 in file Startup.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 167 in file Startup.s
      At line 168 in file Startup.s
      At line 169 in file Startup.s
      At line 170 in file Startup.s
      At line 171 in file Startup.s
      At line 172 in file Startup.s
      At line 173 in file Startup.s
      At line 174 in file Startup.s
      At line 175 in file Startup.s
      At line 176 in file Startup.s
      At line 177 in file Startup.s
      At line 178 in file Startup.s
      At line 179 in file Startup.s
      At line 180 in file Startup.s
      At line 181 in file Startup.s
      At line 184 in file Startup.s
      At line 185 in file Startup.s
      At line 186 in file Startup.s
      At line 187 in file Startup.s
      At line 188 in file Startup.s
      At line 191 in file Startup.s
      At line 192 in file Startup.s
      At line 193 in file Startup.s
      At line 194 in file Startup.s
      At line 195 in file Startup.s
      At line 196 in file Startup.s
      At line 197 in file Startup.s
      At line 198 in file Startup.s
      At line 199 in file Startup.s
      At line 200 in file Startup.s
      At line 201 in file Startup.s
      At line 202 in file Startup.s
      At line 203 in file Startup.s
      At line 204 in file Startup.s
      At line 205 in file Startup.s
      At line 206 in file Startup.s
      At line 207 in file Startup.s
      At line 208 in file Startup.s
      At line 209 in file Startup.s
      At line 210 in file Startup.s
      At line 211 in file Startup.s
      At line 212 in file Startup.s
      At line 213 in file Startup.s

Reset_Handler_In_SRAM 00000000

Symbol: Reset_Handler_In_SRAM
   Definitions
      At line 350 in file Startup.s
   Uses
      At line 295 in file Startup.s
Comment: Reset_Handler_In_SRAM used once
StartApplication 00000004

Symbol: StartApplication
   Definitions
      At line 417 in file Startup.s
   Uses
      At line 416 in file Startup.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Comment: StartApplication used once
|.text| 00000000

Symbol: |.text|
   Definitions
      At line 348 in file Startup.s
   Uses
      None
Comment: |.text| unused
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_VTABLE E000ED08

Symbol: NVIC_VTABLE
   Definitions
      At line 6 in file Startup.s
   Uses
      At line 261 in file Startup.s
      At line 262 in file Startup.s
      At line 463 in file Startup.s
      At line 464 in file Startup.s

_APP_START_ADDRESS 00001000

Symbol: _APP_START_ADDRESS
   Definitions
      At line 8 in file Startup.s
   Uses
      At line 431 in file Startup.s
      At line 470 in file Startup.s

_STACK_SIZE 00000040

Symbol: _STACK_SIZE
   Definitions
      At line 16 in file Startup.s
   Uses
      At line 31 in file Startup.s
      At line 49 in file Startup.s

_VTABLE_START_ADDRESS 00001000

Symbol: _VTABLE_START_ADDRESS
   Definitions
      At line 7 in file Startup.s
   Uses
      At line 431 in file Startup.s
      At line 459 in file Startup.s
      At line 460 in file Startup.s
      At line 470 in file Startup.s

__Vectors_Size 0000026C

Symbol: __Vectors_Size
   Definitions
      At line 217 in file Startup.s
   Uses
      At line 46 in file Startup.s
Comment: __Vectors_Size used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 383 in file Startup.s
   Uses
      At line 384 in file Startup.s
Comment: main used once
|Image$$SRAM$$ZI$$Base| 00000000

Symbol: |Image$$SRAM$$ZI$$Base|
   Definitions
      At line 237 in file Startup.s
      At line 248 in file Startup.s
   Uses
      At line 238 in file Startup.s
      At line 249 in file Startup.s
Warning: |Image$$SRAM$$ZI$$Base| multiply defined
|Image$$SRAM$$ZI$$Limit| 00000000

Symbol: |Image$$SRAM$$ZI$$Limit|
   Definitions
      At line 251 in file Startup.s
   Uses
      At line 252 in file Startup.s
Comment: |Image$$SRAM$$ZI$$Limit| used once
3 symbols
384 symbols in table
